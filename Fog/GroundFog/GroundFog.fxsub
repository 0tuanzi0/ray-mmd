#include "../../ray.conf"
#include "../../shader/math.fxsub"
#include "../../shader/common.fxsub"
#include "../../shader/gbuffer.fxsub"
#include "../../shader/gbuffer_sampler.fxsub"

float mFogR :  CONTROLOBJECT < string name="(self)"; string item = "R+"; >;
float mFogG :  CONTROLOBJECT < string name="(self)"; string item = "G+"; >;
float mFogB :  CONTROLOBJECT < string name="(self)"; string item = "B+"; >;
float mFogRange :  CONTROLOBJECT < string name="(self)"; string item = "Range+"; >;
float mFogHeight :  CONTROLOBJECT < string name="(self)"; string item = "Height+"; >;
float mFogDensity :  CONTROLOBJECT < string name="(self)"; string item = "Density+"; >;

float4 ApplyGroundFog(float distance, float3 V)
{
    float3 P = mul(float4(V * distance / V.z, 1), matViewInverse).xyz;
    float fog = 1.0 - exp(-distance * P.y * (mFogHeight / 5000));
    float fogAmount = saturate(mFogDensity * exp(-CameraPosition.y * (mFogHeight / 5000)) * fog / P.y);
    float3 fogColor = float3(mFogR, mFogG, mFogB);
    fogAmount = pow(fogAmount, max(1 - mFogRange, 0.01));
    return float4(fogColor * fogAmount, 0);
}

void GroundFogVS(
    in float4 Position : POSITION,
    in float3 Normal : NORMAL,
    in float2 Texcoord : TEXCOORD0,
    out float4 oTexcoord0 : TEXCOORD0,
    out float4 oTexcoord1 : TEXCOORD1,
    out float4 oPosition  : POSITION)
{
    oPosition = float4(CoordToPos(Texcoord), 0, 1);
    oTexcoord0 = Texcoord.xyxy + ViewportOffset.xyxy;
    oTexcoord1 = -mul(oPosition, matProjectInverse);
}

void GroundFogPS(
    float2 coord : TEXCOORD0, 
    float3 viewdir : TEXCOORD1,
    out float4 oColor0 : COLOR0,
    out float4 oColor1 : COLOR1)
{
    float4 MRT0 = tex2D(Gbuffer1Map, coord);
    float4 MRT1 = tex2D(Gbuffer2Map, coord);
    float4 MRT2 = tex2D(Gbuffer3Map, coord);
    float4 MRT3 = tex2D(Gbuffer4Map, coord);

    MaterialParam material;
    DecodeGbuffer(MRT0, MRT1, MRT2, MRT3, material);
    
    float4 MRT5 = tex2D(Gbuffer5Map, coord);
    float4 MRT6 = tex2D(Gbuffer6Map, coord);
    float4 MRT7 = tex2D(Gbuffer7Map, coord);
    float4 MRT8 = tex2D(Gbuffer8Map, coord);

    MaterialParam materialAlpha;
    DecodeGbuffer(MRT5, MRT6, MRT7, MRT8, materialAlpha);

    float3 V = normalize(viewdir);
    
    oColor0 = ApplyGroundFog(material.linearDepth, V);
    oColor1 = ApplyGroundFog(materialAlpha.linearDepth, V);
}

#define OBJECT_TEC(name, mmdpass) \
    technique name < string MMDPass = mmdpass;\
        string Script = \
            "RenderColorTarget0=;"\
            "RenderColorTarget1=LightAlphaMap;"\
            "Pass=DrawObject;"\
    ;>{\
        pass DrawObject {\
            ZEnable = false; ZWriteEnable = false;\
            AlphaBlendEnable = TRUE; AlphaTestEnable = FALSE;\
            SrcBlend = ONE; DestBlend = ONE;\
            CullMode = NONE;\
            VertexShader = compile vs_3_0 GroundFogVS();\
            PixelShader  = compile ps_3_0 GroundFogPS();\
        }\
    }

OBJECT_TEC(MainTec0, "object")
OBJECT_TEC(MainTecBS0, "object_ss")
    
technique EdgeTec < string MMDPass = "edge"; > {}
technique ShadowTech < string MMDPass = "shadow";  > {}
technique ZplotTec < string MMDPass = "zplot"; > {}
texture NoiseMap<string ResourceName = "shader/textures/noise.png"; int Miplevels = 0;>; 
sampler NoiseMapSamp = sampler_state {
	texture = <NoiseMap>;
	MINFILTER = LINEAR; MAGFILTER = LINEAR; MIPFILTER = NONE;
	ADDRESSU = WRAP; ADDRESSV = WRAP;
};

float noise(float3 x)
{
	float3 p = floor(x);
	float3 f = frac(x);
	f = f * f * (3.0 - 2.0 * f);

	float2 uv = (p.xy + float2(37.0, 17.0) * p.z) + f.xy;
	float2 rg = tex2Dlod(NoiseMapSamp, float4((uv + 0.5) / 256.0, 0, 0)).yx;
	return lerp(rg.x, rg.y, f.z);
}

float fbm(float3 p, float bias)
{
	float f;
	f = 0.5000    * noise(p); p = p * 3.02; p.y -= bias * 0.2;
	f += 0.2500   * noise(p); p = p * 3.03; p.y += bias * 0.06;
	f += 0.1250   * noise(p); p = p * 3.01;
	f += 0.0625   * noise(p); p = p * 3.03;
	f += 0.03125  * noise(p); p = p * 3.02;
	f += 0.015625 * noise(p);
	return saturate(f);
}
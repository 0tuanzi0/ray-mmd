float3 textureAVG(samplerCube tex, float3 tc) 
{
    const float diff0 = 0.35;
    const float diff1 = 0.12;

    float3 s0 = textureCube(tex,tc).xyz;
    float3 s1 = textureCube(tex,tc+float3(diff0)).xyz;
    float3 s2 = textureCube(tex,tc+float3(-diff0)).xyz;
    float3 s3 = textureCube(tex,tc+float3(-diff0,diff0,-diff0)).xyz;
    float3 s4 = textureCube(tex,tc+float3(diff0,-diff0,diff0)).xyz;
    float3 s5 = textureCube(tex,tc+float3(diff1)).xyz;
    float3 s6 = textureCube(tex,tc+float3(-diff1)).xyz;
    float3 s7 = textureCube(tex,tc+float3(-diff1,diff1,-diff1)).xyz;
    float3 s8 = textureCube(tex,tc+float3(diff1,-diff1,diff1)).xyz;

    return (s0 + s1 + s2 + s3 + s4 + s5 + s6 + s7 + s8) / 9.0;
}

float3 textureBlured(samplerCube tex, float3 tc) 
{
    float3 r = textureAVG(tex,float3(1.0,0.0,0.0));
    float3 t = textureAVG(tex,float3(0.0,1.0,0.0));
    float3 f = textureAVG(tex,float3(0.0,0.0,1.0));
    float3 l = textureAVG(tex,float3(-1.0,0.0,0.0));
    float3 b = textureAVG(tex,float3(0.0,-1.0,0.0));
    float3 a = textureAVG(tex,float3(0.0,0.0,-1.0));
        
    float kr = dot(tc,float3(1.0,0.0,0.0)) * 0.5 + 0.5; 
    float kt = dot(tc,float3(0.0,1.0,0.0)) * 0.5 + 0.5;
    float kf = dot(tc,float3(0.0,0.0,1.0)) * 0.5 + 0.5;
    float kl = 1.0 - kr;
    float kb = 1.0 - kt;
    float ka = 1.0 - kf;
    
    kr = pow(kr, 4.0);
    kt = pow(kt, 4.0);
    kf = pow(kf, 4.0);
    kl = pow(kl, 4.0);
    kb = pow(kb, 4.0);
    ka = pow(ka, 4.0);    
    
    float d;
    float3 ret;
    ret  = f * kf; d  = kf;
    ret += a * ka; d += ka;
    ret += l * kl; d += kl;
    ret += r * kr; d += kr;
    ret += t * kt; d += kt;
    ret += b * kb; d += kb;
    
    return ret / d;
}